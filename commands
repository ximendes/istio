Create cluster:
- k3d cluster create -p '8000:30000@loadbalancer' --agents 2

install istio:
  - curl -L https://istio.io/downloadIstio | sh -
  - mover istio pra alguma pasta e colocar como variável de ambiente
  - istioclt install 
  - kubectl get svc -n istio-system 
  - kubectl get po -n istio-system 

Add a namespace label to instruct Istio to automatically inject Envoy sidecar proxies when you deploy your application later:
  - kubectl label namespace default istio-injection=enabled

kiali:
- kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.20/samples/addons/kiali.yaml
grafana:
- kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.20/samples/addons/grafana.yaml
jaeger:
- kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.20/samples/addons/jaeger.yaml
prometheus:
- kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.20/samples/addons/prometheus.yaml

Dashboard kiali:
- istioctl dashboard kiali

Executando requisição em loop:
- while true; do curl http://localhost:8000; echo; sleep 0.5; done;

fortio:
- kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.20/samples/httpbin/sample-client/fortio-deploy.yaml
- export FORTIO_POD=$(kubectl get pods -l app=fortio -o 'jsonpath={.items[0].metadata.name}')

execute fortio:
- kubectl exec "$FORTIO_POD" -c fortio -- fortio load -c 2 -qps 0 -t 200s -loglevel Warning http://nginx-service:8000